x<-1
ring(x)
xprod <- function(A1, A2) {
x = A1[2] * A2[3] - A1[3] * A2[2]
y = A1[3] * A2[1] - A1[1] * A2[3]
z = A1[1] * A2[2] - A2[1] * A1[2]
return(c(x, y, z))
}
x<-c(1,0,0)
y <-c(0,1,0)
z<-xprod(x, y)
z
m <- as.matrix(z)
m
p <- c(1,1,0)
x*p
x <- c(1,2,3)
x*p
x*x
vlength <- function(v) {
return(sqrt(v*v))
}
vlength(y)
vlength <- function(v) {
return(sqrt(sum(v*v))
}
vlength <- function(v) {
return(sqrt(sum(v*v)))
}
vlength(y)
p
vlength(p)
vlength(-y)
View(xprod)
lvector <- function(r1, r2) {
l = vlength(r2-r1)
return((r2-r1)/l)
}
lvector(y,z)
x <- c(1,0,0)
lvector(x,y)
vlength(lvector(x,y))
plcos <- function(n, u){
n = n/vlength(n)
u = u/vlength(u)
return(sum(n*u))
}
plcos(x,y)
plcos(x,p)
cos(pi/4)
plcos(x,-p)
corners <- function (w, z){
V1 = c(w/sqrt(2), w/sqrt(2), z)
V2 = c(w/sqrt(2), -w/sqrt(2), z)
V3 = c(-w/sqrt(2), -w/sqrt(2), z)
V4 = c(w/sqrt(2), -w/sqrt(2), z)
return(c(V1,V2,V3,V4))
}
corners(1,0)
cbind((1,0,0), (0, 1, 0))
as.matrix(c(x,y,z,p), byrow = T)
rbind(c(x,y))
cbind(c(x,y))
as.matrix(x,y)
as.matrix(c(x,y), nrow=2, ncol=3, byrow=T)
as.matrix(c(x,y), nrow=2, ncol=3)
corners <- function (w, d, alpha = 0){
M <- as.matrix(nrow=8, ncol=3)
s = w - 2*d*sin(alpha*pi/180)
M[1,] = c(w/2, w/2, 0)
M[2,] = c(w/2, -w/2, 0)
M[3,] = c(-w/2, -w/2, 0)
M[4,] = c(-w/2, w/2, 0)
M[5,] = c(s/2, s/2, d)
M[6,] = c(s/2, s/2, d)
M[7,] = c(s/2, s/2, d)
M[8,] = c(s/2, s/2, d)
return(M)
}
test <- corners(1,.1,0)
as.matrix(nrow=2, ncol=3)
as.matrix(0, nrow=2, ncol=3)
as.matrix(1:6, nrow=2, ncol=3)
matrix(nrow=2, ncol=3)
matrix(1:6, nrow=2, ncol=3)
m <- matrix(nrow=2, ncol=3)
m
m[1,]=1:3
m
corners <- function (w, d, alpha = 0){
M <- matrix(nrow=8, ncol=3)
s = w - 2*d*sin(alpha*pi/180)
M[1,] = c(w/2, w/2, 0)
M[2,] = c(w/2, -w/2, 0)
M[3,] = c(-w/2, -w/2, 0)
M[4,] = c(-w/2, w/2, 0)
M[5,] = c(s/2, s/2, d)
M[6,] = c(s/2, s/2, d)
M[7,] = c(s/2, s/2, d)
M[8,] = c(s/2, s/2, d)
return(M)
}
corners(1,.1,0)
corners <- function (w, d, alpha = 0){
M <- matrix(nrow=8, ncol=3)
s = w - 2*d*sin(alpha*pi/180)
M[1,] = c(w/2, w/2, 0)
M[2,] = c(w/2, -w/2, 0)
M[3,] = c(-w/2, -w/2, 0)
M[4,] = c(-w/2, w/2, 0)
M[5,] = c(s/2, s/2, d)
M[6,] = c(s/2, -s/2, d)
M[7,] = c(-s/2, -s/2, d)
M[8,] = c(-s/2, s/2, d)
return(M)
}
corners(1,.1,0)
corners(2,.1,0)
corners(2,.1,45)
m2[1]<-x
x
m2 <-x
m2[2] <- y
p <- M[1,]
SM <- corners(2,.1,45)
SM
p<-M[1,]
p<-SM[1,]
p
class(p)
dim(p)
dim(SM)
M[1,].name = "B1"
name(M[1,]) = "B1"
name(SM[1,]) = "B1"
names(SM)
names(SM)<-"test"
names(SM)
names(SM)<- NULL
rownames(SM)<-c("P1", "P2", "P3", "P4")
rownames(SM)<-c("B1", "B2", "B3", "B4","T1", "T2", "T3", "T4")
names(SM)
rownames(SM)
SM$B1
B1
m0 <- matrix(NA, 4, 0)
m0
rownames(m0)
colnames(SM)<-c("x", "y", "z")
names(SM)
SM$x
SM[1]
SM[1,1]
SM[1,]
SM
corners <- function (w, d, alpha = 0){
M <- matrix(nrow=8, ncol=3)
s = w - 2*d*sin(alpha*pi/180)
M[1,] = c(w/2, w/2, 0)
M[2,] = c(w/2, -w/2, 0)
M[3,] = c(-w/2, -w/2, 0)
M[4,] = c(-w/2, w/2, 0)
M[5,] = c(s/2, s/2, d)
M[6,] = c(s/2, -s/2, d)
M[7,] = c(-s/2, -s/2, d)
M[8,] = c(-s/2, s/2, d)
colnames(M)<-c("x", "y", "z")
rownames(M)<-c("B1", "B2", "B3", "B4","T1", "T2", "T3", "T4")
return(M)
}
rm(m)
rm(m0)
rm(m2)
SM <- corners(2,.1,45)
SM
SM <- corners(2,.2,30)
SM
SM.B1
